# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# FROM ubuntu:20.04 as base_build
FROM quay.io/condaforge/miniforge3
LABEL maintainer=gvasudevan@google.com

ENV DEBIAN_FRONTEND=noninteractive

ARG PYTHON_VERSION
ARG USE_BAZEL_VERSION

RUN apt update -y && apt install -y --no-install-recommends \
        automake \
        build-essential \
        ca-certificates \
        curl \
        git \
        gcc-10 \
        g++-10 \
        libcurl3-dev \
        libfreetype6-dev \
        libpng-dev \
        libtool \
        libzmq3-dev \
        mlocate \
        openjdk-8-jdk\
        openjdk-8-jre-headless \
        pkg-config \
        software-properties-common \
        swig \
        unzip \
        wget \
        zip \
        zlib1g-dev

# Install python
RUN conda create -n build -y python==${PYTHON_VERSION}
RUN conda run -n build pip install future>=0.17.1 grpcio h5py keras_applications>=1.0.8 keras_preprocessing>=1.1.0 mock numpy portpicker requests

# Set up bazelisk v1.22.0
RUN wget https://github.com/bazelbuild/bazelisk/releases/download/v1.22.0/bazelisk-linux-amd64 -O /usr/local/bin/bazel && chmod +x /usr/local/bin/bazel

# Copy the repo into the container
COPY . /build
WORKDIR /build

# FROM base_build as binary_build
# Build, and install TensorFlow Serving
ARG TF_SERVING_BUILD_OPTIONS="--config=release"
RUN echo "Building with build options: ${TF_SERVING_BUILD_OPTIONS}"
ARG TF_SERVING_BAZEL_OPTIONS=""
RUN echo "Building with Bazel options: ${TF_SERVING_BAZEL_OPTIONS}"

RUN mkdir dist/

RUN conda run -n build bazel build \
    ${TF_SERVING_BAZEL_OPTIONS} \
    --output_filter=DONT_MATCH_ANYTHING \
    ${TF_SERVING_BUILD_OPTIONS} \
    --config=kokoro \
    tensorflow_serving/model_servers:tensorflow_model_server

# Build and install TensorFlow Serving API
RUN conda run -n build bazel build \
    ${TF_SERVING_BAZEL_OPTIONS} \
    --output_filter=DONT_MATCH_ANYTHING \
    ${TF_SERVING_BUILD_OPTIONS} \
    --config=kokoro \
    tensorflow_serving/tools/pip_package:build_pip_package && \
    bazel-bin/tensorflow_serving/tools/pip_package/build_pip_package \
    ./dist
